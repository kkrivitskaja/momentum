* {
    margin: 0;
    padding: 0;
    border: none;
    outline: none;
    box-sizing: border-box;
}

body {
    width: 100vw;
    height: 100vh;
    min-width: 320px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    font-family: 'Montserrat',
        sans-serif;
    color: #ffffff;
    background: no-repeat center center fixed;
    transition: 0.5s ease-out;
}

.qw-wrapper {
    display: flex;
    justify-content: space-between;
    padding-top: 20px;
}

.quite-container {
    font-size: 0.7rem;
    text-align: center;
}

.blockquote {
    width: 500px;
    display: flex;
    justify-content: space-around;
}

.quote {
    width: 400px;
}

.btn__quote,
.btn {
    width: 30px;
    height: 30px;
    border: none;
    background: url("https://www.pngarts.com/files/7/Update-Button-PNG-Image.png");
    /* url(chrome-extension://kbfnbcaeplbcioakkpcpgfkobkghlhen/src/images/a6a1f6d03231ec43383d24b26cd7eee6/gbtn-grammarly.svg) */
    background-size: contain;
    background-repeat: no-repeat;
    filter: grayscale(1);
    transition: all 0.8s ease-in-out;
}

.btn:hover,
.btn__quote:hover {
    filter: grayscale(.5);
    cursor: pointer;
    animation: bounce 1s;
    transform: rotate(360deg);
}

.weather__container {
    font-size: 0.8rem;
    width: 140px;
    margin-left: 10px;
}

.weather-icon:hover {
    animation: shake 1.5s;
}

.location {
    display: inline-block;
    min-width: 60px;
}

.main-content {
    height: 300px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
}

#time {
    font-size: 80px;
    font-family: monospace;
}

#date {
    font-size: 30px;
    text-align: center;
}

#name,
#focus {
    display: inline-block;
    min-width: 220px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#focus {
    min-width: 530px;
}

#name:focus,
#focus:focus,
.location:focus {
    border-bottom: 2px solid #ffffff;
    outline: none;
}

.time-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.time-container {
    justify-content: space-between;
}

.todo-wrapper {
    display: flex;
    justify-content: end;
    margin: 0 25px 20px;
}

.modal {
    display: none;
}

.modal-content {
    background-color: rgb(241, 236, 236);
    position: fixed;
    z-index: 1;
    bottom: 60px;
    right: 20px;
    padding: 5px;
    border-radius: 6px;
}

.show {
    display: block;
}

#modal-btn {
    background-color: Transparent;
    color: white;
    font-size: 24px;
}

form {
    min-height: 20px;
    display: flex;
    /* justify-content: center; */
    align-items: center;
}

form input,
form button,
.trash-btn,
.complete-btn,
.todo-select {
    padding: 3px 3px;
    font-size: 18px;
    background: rgb(255, 255, 255);
    color: rgb(5, 5, 5);
}

form button,
.trash-btn,
.complete-btn {
    cursor: pointer;
    transition: all 0.3s ease;
    align-content: center;
}

form button:hover,
.trash-btn:hover,
.complete-btn:hover {
    background: rgb(8, 8, 8);
    color: white;
}

.task-container {
    display: flex;
    /* justify-content: center; */
    align-items: center;
}

.task-list {
    min-width: 100%;
    list-style: none;
}

.todo {
    margin: 0.2rem 0;
    background: white;
    font-size: 18px;
    color: rgb(0, 0, 0);
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: all 0.3s ease;
}

.todo li {
    flex: 1;
}

.todo-item {
    padding: 0 4px;
}

.fa-trash,
.fa-check {
    pointer-events: none;
}

.completed {
    text-decoration: line-through;
    color: rgb(105, 104, 104);
}

.fall {
    /* transform: translateY(10rem) rotateZ(20deg); */
    opacity: 0;
}

.todo-select {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    outline: 0;
    box-shadow: none;
    border: 0 !important;
    background-image: none;
}

.todo-select {
    /* margin-left: 0.5rem; */
    position: relative;
    overflow: hidden;
    width: 6.5rem;

}

.todo-filter {
    cursor: pointer;
    color: #0e0d0d;
    /* width: 7rem; */
}

/* .todo-select::after {
    content: "\25bc";
    /* position: absolute; */
/* top: 0;
    right: 0;
    padding: 3px;
    width: 5px;
    border-radius: 50%;
    background: rgb(255, 255, 255);
    cursor: pointer;
    pointer-events: none;
}  */

.todo-select:hover::after {
    background: rgb(231, 230, 230);
}


@media (max-width: 700px) {
    .qw-wrapper {
        padding-top: 5px;
        display: flex;
        flex-direction: column-reverse;
        justify-content: space-between;
    }

    .blockquote {
        width: 310px;
        margin-top: 5px;
        text-align: left;
        margin-left: 10px;
        display: flex;
        flex-direction: column-reverse;
    }

    .btn,
    .btn__quote {
        margin: 3px 0;
    }

.quote{
    height: 100px;
}
    .weather__container {
       
        font-size: 0.7rem;
        margin-left: 10px;
    }

    #time,
    #date {
        font-size: 30px;
    }

    #focus,
    #name {
        min-width: 300px;
    }

    .greeting-container,
    .focus-container {
        font-size: 16px;
        width: 300px;
        text-align: center;
    }

    .todo-wrapper {
        margin: 0 25px 5px;
    }

    .modal-content {
        font-size: 16px;
    }

    #modal-btn {
        font-size: 20px;
    }

    .modal-content {
        bottom: 35px;
        right: 10px;
        width: 227px;
    }

    form {
        min-height: 15px;
    }

    form input,
    form button,
    .trash-btn,
    .complete-btn,
    .todo-select {
        font-size: 15px;

    }

    .task-list {
        min-width: 100%;
    }

    .todo-filter {
        width: 6.5rem;
    }
}

@keyframes shake {
    0% {
        transform: translate(1px, 1px) rotate(0deg);
    }

    10% {
        transform: translate(-1px, -2px) rotate(-1deg);
    }

    30% {
        transform: translate(3px, 2px) rotate(0deg);
    }

    50% {
        transform: translate(-1px, 2px) rotate(-1deg);
    }

    70% {
        transform: translate(3px, 1px) rotate(-1deg);
    }

    90% {
        transform: translate(1px, 2px) rotate(0deg);
    }
}